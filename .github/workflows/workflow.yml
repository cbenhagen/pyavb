# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python CI

on:
  push:
    branches: [ "master", "dev" ]
  pull_request:
    branches: [ "master", "dev" ]

jobs:
  build-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["2.7", "3.8", "3.9", "3.10"]
        include:
        - os: ubuntu-latest
          CFLAGS: "-g0 -O3"
        - os: windows-latest
          CFLAGS: "/O2"
        - os: macos-latest
          CFLAGS: "-g0 -O3"

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Windows Choco Cache
      if: ${{ runner.os == 'Windows' && matrix.python-version == '2.7' }}
      uses: actions/cache@v3
      with:
        key: choco-${{ runner.os }}-vcpython27
        path: ~\AppData\Local\Temp\chocolatey\vcpython27\*\*.msi

    - name: Setup MSVC for Python 2.7
      if: ${{ runner.os == 'Windows' && matrix.python-version == '2.7' }}
      run: |
        choco install vcpython27 -fd --ignore-dependencies --source=".github\workflows\custom" -y

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel cython

    - name: Run Unit Tests
      run: |
        python -m unittest discover tests -v

    - name: Run Cython Ext Unit Tests
      env:
        CFLAGS : ${{ matrix.CFLAGS }}
      run: |
        python setup.py build_ext --inplace
        python -m unittest discover tests -v

    - name: Build Wheel
      run: |
        python setup.py bdist_wheel

    - name: Create Artifact ${{ matrix.os }} python ${{ matrix.python-version }}
      uses: actions/upload-artifact@v3
      with:
        name: pyavb-${{ matrix.os }}-python-${{ matrix.python-version }}-${{ github.sha }}
        path: dist/*.whl

    - name: Create Artifact All
      uses: actions/upload-artifact@v3
      with:
        name: pyavb-all-${{ github.sha }}
        path: dist/*.whl

  latest-release:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Create sdist
        run: |
          pip install wheel cython
          python setup.py sdist

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: pyavb-all-${{ github.sha }}
          path: dist/

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: dist/

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            dist/*.tar.gz
            dist/*.whl